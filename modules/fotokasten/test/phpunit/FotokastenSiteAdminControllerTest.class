<?php
/*
 * Gallery - a web based photo album viewer and editor
 * Copyright (C) 2000-2008 Bharat Mediratta
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA  02110-1301, USA.
 */

/**
 * FotokastenSiteAdmin controller tests
 *
 * @package Fotokasten
 * @subpackage PHPUnit
 * @author Alan Harder <alan.harder@sun.com>
 * @version $Revision: 17580 $
 */
class FotokastenSiteAdminControllerTest extends GalleryControllerTestCase {
	public function __construct($methodName) {
		parent::__construct($methodName, 'fotokasten.FotokastenSiteAdmin');
	}

	public function setUp() {
		$ret = parent::setUp();

		if ($ret) {
			return $ret;
		}

		$ret = $this->_markPluginParametersForCleanup('module', 'fotokasten');

		if ($ret) {
			return $ret;
		}
	}

	public function testFotokastenSiteAdminControllerReset() {
		GalleryUtilities::putRequestVariable('form[action][reset]', '1');

		$results = $this->handleRequest();
		$this->assertEquals(
			array(
				'redirect' => array(
					'view'    => 'core.SiteAdmin',
					'subView' => 'fotokasten.FotokastenSiteAdmin',
				),
				'status' => array(),
				'error'  => array(),
			),
			$results
		);
	}

	public function testFotokastenSiteAdminControllerSave() {
		GalleryUtilities::putRequestVariable('form[affiliateId]', '1234');
		GalleryUtilities::putRequestVariable('form[affiliateIdPass]', 'abcde12345');
		GalleryUtilities::putRequestVariable('form[action][save]', '1');

		$results = $this->handleRequest();
		$this->assertEquals(
			array(
				'redirect' => array(
					'view'    => 'core.SiteAdmin',
					'subView' => 'fotokasten.FotokastenSiteAdmin',
				),
				'status' => array(
					'saved' => 1,
				),
				'error' => array(),
			),
			$results
		);

		list($ret, $params) = GalleryCoreApi::fetchAllPluginParameters('module', 'fotokasten');

		if ($ret) {
			return $ret;
		}
		$this->assertEquals('1234', $params['affiliateId'], 'affiliateId');
		$this->assertEquals('abcde12345', $params['affiliateIdPass'], 'affiliateIdPass');
	}

	public function testFotokastenSiteAdminControllerUseGalleryId() {
		GalleryUtilities::putRequestVariable('form[affiliateId]', 'anything');
		GalleryUtilities::putRequestVariable('form[affiliateIdPass]', 'anything');
		GalleryUtilities::putRequestVariable('form[action][useGalleryId]', '1');

		$results = $this->handleRequest();
		$this->assertEquals(
			array(
				'redirect' => array(
					'view'    => 'core.SiteAdmin',
					'subView' => 'fotokasten.FotokastenSiteAdmin',
				),
				'status' => array(
					'usingGalleryId' => 1,
				),
				'error' => array(),
			),
			$results
		);

		list($ret, $params) = GalleryCoreApi::fetchAllPluginParameters('module', 'fotokasten');

		if ($ret) {
			return $ret;
		}
		$this->assertEquals(
			FOTOKASTEN_GALLERY_AFFILIATE_ID,
			$params['affiliateId'],
			'affiliateId'
		);
		$this->assertEquals(
			FOTOKASTEN_GALLERY_AFFILIATE_PASSWORD,
			$params['affiliateIdPass'],
			'affiliateIdPass'
		);
	}

	public function testFotokastenSiteAdminControllerSaveBadValues() {
		GalleryUtilities::putRequestVariable('form[affiliateId]', '123x');
		GalleryUtilities::putRequestVariable('form[affiliateIdPass]', 'abc</(de12345');
		GalleryUtilities::putRequestVariable('form[action][save]', '1');

		$results = $this->handleRequest();
		$this->assertEquals(
			array(
				'delegate' => array(
					'view'    => 'core.SiteAdmin',
					'subView' => 'fotokasten.FotokastenSiteAdmin',
				),
				'status' => array(),
				'error'  => array(
					'form[error][affiliateId]',
					'form[error][affiliateIdPass]',
				),
			),
			$results
		);
	}

	public function testFotokastenSiteAdminControllerSaveEmptyValues() {
		GalleryUtilities::putRequestVariable('form[affiliateId]', '');
		GalleryUtilities::putRequestVariable('form[affiliateIdPass]', '');
		GalleryUtilities::putRequestVariable('form[action][save]', '1');

		$results = $this->handleRequest();
		$this->assertEquals(
			array(
				'delegate' => array(
					'view'    => 'core.SiteAdmin',
					'subView' => 'fotokasten.FotokastenSiteAdmin',
				),
				'status' => array(),
				'error'  => array(
					'form[error][affiliateId]',
					'form[error][affiliateIdPass]',
				),
			),
			$results
		);
	}
}
