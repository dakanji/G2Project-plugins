<?php
/*
 * Gallery - a web based photo album viewer and editor
 * Copyright (C) 2000-2008 Bharat Mediratta
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA  02110-1301, USA.
 */

/**
 * AdminDigibug controller tests
 *
 * @package Digibug
 * @subpackage PHPUnit
 * @author Alan Harder <alan.harder@sun.com>
 * @version $Revision: 17617 $
 */
class AdminDigibugControllerTest extends GalleryControllerTestCase {
	public function __construct($methodName) {
		parent::__construct($methodName, 'digibug.AdminDigibug');
	}

	public function setUp() {
		$ret = parent::setUp();

		if ($ret) {
			return $ret;
		}

		$ret = $this->_markPluginParametersForCleanup('module', 'digibug');

		if ($ret) {
			return $ret;
		}
	}

	public function testAdminDigibugControllerReset() {
		GalleryUtilities::putRequestVariable('form[action][reset]', '1');

		$results = $this->handleRequest();
		$this->assertEquals(
			array(
				'redirect' => array(
					'view'    => 'core.SiteAdmin',
					'subView' => 'digibug.AdminDigibug',
				),
				'status'   => array(),
				'error'    => array(),
			),
			$results
		);
	}

	public function testAdminDigibugControllerSaveWithOwnerCredentials() {
		GalleryUtilities::putRequestVariable('form[digibugIdChoice]', 'owner');
		GalleryUtilities::putRequestVariable('form[digibugCustomerId]', '1234');
		GalleryUtilities::putRequestVariable('form[digibugPricelistId]', '4321');
		GalleryUtilities::putRequestVariable('form[action][save]', '1');

		$results = $this->handleRequest();
		$this->assertEquals(
			array(
				'redirect' => array(
					'view'    => 'core.SiteAdmin',
					'subView' => 'digibug.AdminDigibug',
				),
				'status'   => array(
					'saved' => 1,
				),
				'error'    => array(),
			),
			$results
		);

		list($ret, $params) = GalleryCoreApi::fetchAllPluginParameters('module', 'digibug');

		if ($ret) {
			return $ret;
		}

		foreach ($params as $key => $value) {
			if ($key[0] == '_') {
				unset($params[$key]);
			}
		}
		ksort($params);

		$this->assertEquals(
			array(
				'digibugCustomerId'  => '1234',
				'digibugIdChoice'    => 'owner',
				'digibugPricelistId' => '4321',
			),
			$params,
			'Verify settings'
		);
	}

	public function testAdminDigibugControllerSaveWithDefaultCredentials() {
		GalleryUtilities::putRequestVariable('form[digibugIdChoice]', 'gallery');
		GalleryUtilities::putRequestVariable('form[action][save]', '1');

		$results = $this->handleRequest();
		$this->assertEquals(
			array(
				'redirect' => array(
					'view'    => 'core.SiteAdmin',
					'subView' => 'digibug.AdminDigibug',
				),
				'status'   => array(
					'saved' => 1,
				),
				'error'    => array(),
			),
			$results
		);

		list($ret, $params) = GalleryCoreApi::fetchAllPluginParameters('module', 'digibug');

		if ($ret) {
			return $ret;
		}

		foreach ($params as $key => $value) {
			if ($key[0] == '_') {
				unset($params[$key]);
			}
		}
		ksort($params);

		$this->assertEquals(
			array(
				'digibugCustomerId'  => '3153',
				'digibugIdChoice'    => 'gallery',
				'digibugPricelistId' => '8491',
			),
			$params,
			'Verify settings'
		);
	}

	public function testAdminDigibugControllerSaveMissingValues() {
		GalleryUtilities::putRequestVariable('form[digibugIdChoice]', 'owner');
		GalleryUtilities::putRequestVariable('form[action][save]', '1');

		$results = $this->handleRequest();
		$this->assertEquals(
			array(
				'delegate' => array(
					'view'    => 'core.SiteAdmin',
					'subView' => 'digibug.AdminDigibug',
				),
				'status'   => array(),
				'error'    => array(
					'form[error][digibugCustomerId][invalid]',
					'form[error][digibugPricelistId][invalid]',
				),
			),
			$results
		);
	}

	public function testAdminDigibugControllerSaveInvalidValues() {
		GalleryUtilities::putRequestVariable('form[digibugIdChoice]', 'owner');
		GalleryUtilities::putRequestVariable('form[action][save]', '1');
		GalleryUtilities::putRequestVariable('form[digibugCustomerId]', '123bsd4');
		GalleryUtilities::putRequestVariable('form[digibugPricelistId]', '4sds321');

		list($ret, $origParams) = GalleryCoreApi::fetchAllPluginParameters('module', 'digibug');

		if ($ret) {
			return $ret;
		}

		$results = $this->handleRequest();
		$this->assertEquals(
			array(
				'delegate' => array(
					'view'    => 'core.SiteAdmin',
					'subView' => 'digibug.AdminDigibug',
				),
				'status'   => array(),
				'error'    => array(
					'form[error][digibugCustomerId][invalid]',
					'form[error][digibugPricelistId][invalid]',
				),
			),
			$results
		);

		list($ret, $params) = GalleryCoreApi::fetchAllPluginParameters('module', 'digibug');

		if ($ret) {
			return $ret;
		}

		$this->assertEquals($origParams, $params, 'module param values have changed');
	}
}
