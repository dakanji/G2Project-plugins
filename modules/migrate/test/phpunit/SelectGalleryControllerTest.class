<?php
/*
 * Gallery - a web based photo album viewer and editor
 * Copyright (C) 2000-2008 Bharat Mediratta
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA  02110-1301, USA.
 */

/**
 * SelectGallery controller tests
 * @package Migrate
 * @subpackage PHPUnit
 * @author Bharat Mediratta <bharat@menalto.com>
 * @version $Revision: 17580 $
 */
class SelectGalleryControllerTest extends GalleryControllerTestCase {
	public function __construct($methodName) {
		parent::__construct($methodName, 'migrate.SelectGallery');
	}

	/**
	 * Test what the controller does when you enter a bad albums path
	 */
	public function testBadAlbumsPath() {
		GalleryUtilities::putRequestVariable('form[albumsPath]', __DIR__);
		GalleryUtilities::putRequestVariable('form[action][select]', 1);

		$results = $this->handleRequest();
		$this->assertEquals(
			array(
				'delegate' => array(
					'view'    => 'core.SiteAdmin',
					'subView' => 'migrate.SelectGallery',
				),
				'status'   => array(),
				'error'    => array('form[error][albumsPath][invalid]'),
			),
			$results
		);
	}

	/**
	 * Test what the controller does when you enter a valid albums path
	 */
	public function testGoodAlbumsPath() {
		global $gallery;
		$platform =& $gallery->getPlatform();
		$slash    = $platform->getDirectorySeparator();

		$albumsPath = __DIR__ . '/../data/albums';
		GalleryUtilities::putRequestVariable('form[albumsPath]', $albumsPath);
		GalleryUtilities::putRequestVariable('form[action][select]', 1);

		$results = $this->handleRequest();
		$this->assertEquals(
			array(
				'redirect' => array(
					'view'       => 'core.SiteAdmin',
					'subView'    => 'migrate.ChooseObjects',
					'albumsPath' => $albumsPath . $slash,
				),
				'status'   => array(),
				'error'    => array(),
			),
			$results
		);
	}

	/**
	 * Test what the controller does when you enter a missing albums path
	 */
	public function testMissingAlbumsPath() {
		GalleryUtilities::putRequestVariable('form[albumsPath]', '');
		GalleryUtilities::putRequestVariable('form[action][select]', 1);

		$results = $this->handleRequest();
		$this->assertEquals(
			array(
				'delegate' => array(
					'view'    => 'core.SiteAdmin',
					'subView' => 'migrate.SelectGallery',
				),
				'status'   => array(),
				'error'    => array('form[error][albumsPath][missing]'),
			),
			$results
		);
	}
}
