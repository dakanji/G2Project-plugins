<?php
/*
 * Gallery - a web based photo album viewer and editor
 * Copyright (C) 2000-2008 Bharat Mediratta
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA  02110-1301, USA.
 */

/**
 * Getid3DetailMode controller tests
 * @package Getid3
 * @subpackage PHPUnit
 * @author Don Willingham <donwillingham@users.sf.net>
 * @version $Revision: 17580 $
 */
class Getid3DetailModeControllerTest extends GalleryControllerTestCase {
	public function __construct($methodName) {
		parent::__construct($methodName, 'getid3:Getid3DetailMode');
	}

	public function testSwitchToSummary() {
		global $gallery;
		GalleryUtilities::putRequestVariable('mode', 'summary');

		// Perform the request and verify that we succeeded
		$results = $this->handleRequest();
		$this->assertEquals(
			array(
				'return'   => 1,
				'redirect' => array(
					'view' => 'core.ShowItem',
				),
				'status' => array(),
				'error'  => array(),
			),
			$results
		);

		// Verify that we're in the right mode now
		$session =& $gallery->getSession();

		if (!$session->exists('getid3.module.LoadGetid3Info.mode')) {
			$this->fail('Missing session value');
		}
		$this->assertEquals('summary', $session->get('getid3.module.LoadGetid3Info.mode'));
	}

	public function testSwitchToDetailed() {
		global $gallery;
		GalleryUtilities::putRequestVariable('mode', 'detailed');

		// Perform the request and verify that we succeeded
		$results = $this->handleRequest();
		$this->assertEquals(
			array(
				'return'   => 1,
				'redirect' => array(
					'view' => 'core.ShowItem',
				),
				'status' => array(),
				'error'  => array(),
			),
			$results
		);

		// Verify that we're in the right mode now
		$session =& $gallery->getSession();

		if (!$session->exists('getid3.module.LoadGetid3Info.mode')) {
			$this->fail('Missing session value');
		}
		$this->assertEquals('detailed', $session->get('getid3.module.LoadGetid3Info.mode'));
	}

	public function testSwitchToBogus() {
		global $gallery;
		GalleryUtilities::putRequestVariable('mode', 'BoGuS');

		// Perform the request and verify that we succeeded
		$results = $this->handleRequest();
		$this->assertEquals(
			array(
				'return'   => 1,
				'redirect' => array(
					'view' => 'core.ShowItem',
				),
				'status' => array(),
				'error'  => array(),
			),
			$results
		);

		// Verify that we're in the right mode now
		$session =& $gallery->getSession();

		if (!$session->exists('getid3.module.LoadGetid3Info.mode')) {
			$this->fail('Missing session value');
		}
		$this->assertEquals('summary', $session->get('getid3.module.LoadGetid3Info.mode'));
	}
}
